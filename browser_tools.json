[
  {
    "name": "browser_close",
    "description": "Close the page",
    "inputSchema": {
      "type": "object",
      "properties": {},
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "annotations": {
      "title": "Close browser",
      "readOnlyHint": true,
      "destructiveHint": false,
      "openWorldHint": true
    }
  },
  {
    "name": "browser_resize",
    "description": "Resize the browser window",
    "inputSchema": {
      "type": "object",
      "properties": {
        "width": {
          "type": "number",
          "description": "Width of the browser window"
        },
        "height": {
          "type": "number",
          "description": "Height of the browser window"
        }
      },
      "required": ["width", "height"],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "annotations": {
      "title": "Resize browser window",
      "readOnlyHint": true,
      "destructiveHint": false,
      "openWorldHint": true
    }
  },
  {
    "name": "browser_console_messages",
    "description": "Returns all console messages",
    "inputSchema": {
      "type": "object",
      "properties": {},
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "annotations": {
      "title": "Get console messages",
      "readOnlyHint": true,
      "destructiveHint": false,
      "openWorldHint": true
    }
  },
  {
    "name": "browser_handle_dialog",
    "description": "Handle a dialog",
    "inputSchema": {
      "type": "object",
      "properties": {
        "accept": {
          "type": "boolean",
          "description": "Whether to accept the dialog."
        },
        "promptText": {
          "type": "string",
          "description": "The text of the prompt in case of a prompt dialog."
        }
      },
      "required": ["accept"],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "annotations": {
      "title": "Handle a dialog",
      "readOnlyHint": false,
      "destructiveHint": true,
      "openWorldHint": true
    }
  },
  {
    "name": "browser_evaluate",
    "description": "Evaluate JavaScript expression on page or element",
    "inputSchema": {
      "type": "object",
      "properties": {
        "function": {
          "type": "string",
          "description": "() => { /* code */ } or (element) => { /* code */ } when element is provided"
        },
        "element": {
          "type": "string",
          "description": "Human-readable element description used to obtain permission to interact with the element"
        },
        "ref": {
          "type": "string",
          "description": "Exact target element reference from the page snapshot"
        }
      },
      "required": ["function"],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "annotations": {
      "title": "Evaluate JavaScript",
      "readOnlyHint": false,
      "destructiveHint": true,
      "openWorldHint": true
    }
  },
  {
    "name": "browser_file_upload",
    "description": "Upload one or multiple files",
    "inputSchema": {
      "type": "object",
      "properties": {
        "paths": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The absolute paths to the files to upload. Can be a single file or multiple files."
        }
      },
      "required": ["paths"],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "annotations": {
      "title": "Upload files",
      "readOnlyHint": false,
      "destructiveHint": true,
      "openWorldHint": true
    }
  },
  {
    "name": "browser_install",
    "description": "Install the browser specified in the config. Call this if you get an error about the browser not being installed.",
    "inputSchema": {
      "type": "object",
      "properties": {},
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "annotations": {
      "title": "Install the browser specified in the config",
      "readOnlyHint": false,
      "destructiveHint": true,
      "openWorldHint": true
    }
  },
  {
    "name": "browser_press_key",
    "description": "Press a key on the keyboard",
    "inputSchema": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "description": "Name of the key to press or a character to generate, such as ArrowLeft or a"
        }
      },
      "required": ["key"],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "annotations": {
      "title": "Press a key",
      "readOnlyHint": false,
      "destructiveHint": true,
      "openWorldHint": true
    }
  },
  {
    "name": "browser_type",
    "description": "Type text into editable element",
    "inputSchema": {
      "type": "object",
      "properties": {
        "element": {
          "type": "string",
          "description": "Human-readable element description used to obtain permission to interact with the element"
        },
        "ref": {
          "type": "string",
          "description": "Exact target element reference from the page snapshot"
        },
        "text": {
          "type": "string",
          "description": "Text to type into the element"
        },
        "submit": {
          "type": "boolean",
          "description": "Whether to submit entered text (press Enter after)"
        },
        "slowly": {
          "type": "boolean",
          "description": "Whether to type one character at a time. Useful for triggering key handlers in the page. By default entire text is filled in at once."
        }
      },
      "required": ["element", "ref", "text"],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "annotations": {
      "title": "Type text",
      "readOnlyHint": false,
      "destructiveHint": true,
      "openWorldHint": true
    }
  },
  {
    "name": "browser_navigate",
    "description": "Navigate to a URL",
    "inputSchema": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "description": "The URL to navigate to"
        }
      },
      "required": ["url"],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "annotations": {
      "title": "Navigate to a URL",
      "readOnlyHint": false,
      "destructiveHint": true,
      "openWorldHint": true
    }
  },
  {
    "name": "browser_navigate_back",
    "description": "Go back to the previous page",
    "inputSchema": {
      "type": "object",
      "properties": {},
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "annotations": {
      "title": "Go back",
      "readOnlyHint": true,
      "destructiveHint": false,
      "openWorldHint": true
    }
  },
  {
    "name": "browser_navigate_forward",
    "description": "Go forward to the next page",
    "inputSchema": {
      "type": "object",
      "properties": {},
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "annotations": {
      "title": "Go forward",
      "readOnlyHint": true,
      "destructiveHint": false,
      "openWorldHint": true
    }
  },
  {
    "name": "browser_network_requests",
    "description": "Returns all network requests since loading the page",
    "inputSchema": {
      "type": "object",
      "properties": {},
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "annotations": {
      "title": "List network requests",
      "readOnlyHint": true,
      "destructiveHint": false,
      "openWorldHint": true
    }
  },
  {
    "name": "browser_take_screenshot",
    "description": "Take a screenshot of the current page. You can't perform actions based on the screenshot, use browser_snapshot for actions.",
    "inputSchema": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": ["png", "jpeg"],
          "default": "png",
          "description": "Image format for the screenshot. Default is png."
        },
        "filename": {
          "type": "string",
          "description": "File name to save the screenshot to. Defaults to page-{timestamp}.{png|jpeg} if not specified."
        },
        "element": {
          "type": "string",
          "description": "Human-readable element description used to obtain permission to screenshot the element. If not provided, the screenshot will be taken of viewport. If element is provided, ref must be provided too."
        },
        "ref": {
          "type": "string",
          "description": "Exact target element reference from the page snapshot. If not provided, the screenshot will be taken of viewport. If ref is provided, element must be provided too."
        },
        "fullPage": {
          "type": "boolean",
          "description": "When true, takes a screenshot of the full scrollable page, instead of the currently visible viewport. Cannot be used with element screenshots."
        }
      },
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "annotations": {
      "title": "Take a screenshot",
      "readOnlyHint": true,
      "destructiveHint": false,
      "openWorldHint": true
    }
  },
  {
    "name": "browser_snapshot",
    "description": "Capture accessibility snapshot of the current page, this is better than screenshot",
    "inputSchema": {
      "type": "object",
      "properties": {},
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "annotations": {
      "title": "Page snapshot",
      "readOnlyHint": true,
      "destructiveHint": false,
      "openWorldHint": true
    }
  },
  {
    "name": "browser_click",
    "description": "Perform click on a web page",
    "inputSchema": {
      "type": "object",
      "properties": {
        "element": {
          "type": "string",
          "description": "Human-readable element description used to obtain permission to interact with the element"
        },
        "ref": {
          "type": "string",
          "description": "Exact target element reference from the page snapshot"
        },
        "doubleClick": {
          "type": "boolean",
          "description": "Whether to perform a double click instead of a single click"
        },
        "button": {
          "type": "string",
          "enum": ["left", "right", "middle"],
          "description": "Button to click, defaults to left"
        }
      },
      "required": ["element", "ref"],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "annotations": {
      "title": "Click",
      "readOnlyHint": false,
      "destructiveHint": true,
      "openWorldHint": true
    }
  },
  {
    "name": "browser_drag",
    "description": "Perform drag and drop between two elements",
    "inputSchema": {
      "type": "object",
      "properties": {
        "startElement": {
          "type": "string",
          "description": "Human-readable source element description used to obtain the permission to interact with the element"
        },
        "startRef": {
          "type": "string",
          "description": "Exact source element reference from the page snapshot"
        },
        "endElement": {
          "type": "string",
          "description": "Human-readable target element description used to obtain the permission to interact with the element"
        },
        "endRef": {
          "type": "string",
          "description": "Exact target element reference from the page snapshot"
        }
      },
      "required": ["startElement", "startRef", "endElement", "endRef"],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "annotations": {
      "title": "Drag mouse",
      "readOnlyHint": false,
      "destructiveHint": true,
      "openWorldHint": true
    }
  },
  {
    "name": "browser_hover",
    "description": "Hover over element on page",
    "inputSchema": {
      "type": "object",
      "properties": {
        "element": {
          "type": "string",
          "description": "Human-readable element description used to obtain permission to interact with the element"
        },
        "ref": {
          "type": "string",
          "description": "Exact target element reference from the page snapshot"
        }
      },
      "required": ["element", "ref"],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "annotations": {
      "title": "Hover mouse",
      "readOnlyHint": true,
      "destructiveHint": false,
      "openWorldHint": true
    }
  },
  {
    "name": "browser_select_option",
    "description": "Select an option in a dropdown",
    "inputSchema": {
      "type": "object",
      "properties": {
        "element": {
          "type": "string",
          "description": "Human-readable element description used to obtain permission to interact with the element"
        },
        "ref": {
          "type": "string",
          "description": "Exact target element reference from the page snapshot"
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Array of values to select in the dropdown. This can be a single value or multiple values."
        }
      },
      "required": ["element", "ref", "values"],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "annotations": {
      "title": "Select option",
      "readOnlyHint": false,
      "destructiveHint": true,
      "openWorldHint": true
    }
  },
  {
    "name": "browser_tab_list",
    "description": "List browser tabs",
    "inputSchema": {
      "type": "object",
      "properties": {},
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "annotations": {
      "title": "List tabs",
      "readOnlyHint": true,
      "destructiveHint": false,
      "openWorldHint": true
    }
  },
  {
    "name": "browser_tab_new",
    "description": "Open a new tab",
    "inputSchema": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "description": "The URL to navigate to in the new tab. If not provided, the new tab will be blank."
        }
      },
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "annotations": {
      "title": "Open a new tab",
      "readOnlyHint": true,
      "destructiveHint": false,
      "openWorldHint": true
    }
  },
  {
    "name": "browser_tab_select",
    "description": "Select a tab by index",
    "inputSchema": {
      "type": "object",
      "properties": {
        "index": {
          "type": "number",
          "description": "The index of the tab to select"
        }
      },
      "required": ["index"],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "annotations": {
      "title": "Select a tab",
      "readOnlyHint": true,
      "destructiveHint": false,
      "openWorldHint": true
    }
  },
  {
    "name": "browser_tab_close",
    "description": "Close a tab",
    "inputSchema": {
      "type": "object",
      "properties": {
        "index": {
          "type": "number",
          "description": "The index of the tab to close. Closes current tab if not provided."
        }
      },
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "annotations": {
      "title": "Close a tab",
      "readOnlyHint": false,
      "destructiveHint": true,
      "openWorldHint": true
    }
  },
  {
    "name": "browser_wait_for",
    "description": "Wait for text to appear or disappear or a specified time to pass",
    "inputSchema": {
      "type": "object",
      "properties": {
        "time": {
          "type": "number",
          "description": "The time to wait in seconds"
        },
        "text": {
          "type": "string",
          "description": "The text to wait for"
        },
        "textGone": {
          "type": "string",
          "description": "The text to wait for to disappear"
        }
      },
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    },
    "annotations": {
      "title": "Wait for",
      "readOnlyHint": true,
      "destructiveHint": false,
      "openWorldHint": true
    }
  }
]